#!/bin/bash

remote=$1
host=`hostname`
call="request_port/$host"

api_response=''
local_ip=''
outside_ip=''

get_ips () {
  local_ip=`ifconfig | sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p' | tr '\n' ','`
  outside_ip=`curl -s ifconfig.io`
}

api_call () {
  get_ips
  api_response=`curl -s $remote:3000/a/$call?local_ip=$local_ip\&outside_ip=$outside_ip`
}

# Parse response
api_call
set -- "$api_response" 
IFS=";"; declare -a Array=($*) 
port="${Array[0]}"
restart="${Array[1]}" 

echo "Port given: $port"
echo "Restart: $restart"

# See if the server is running
lines=`ps aux | grep $port | wc -l`

if [ $lines -eq 1 -o $restart == 'true' ]
then
  echo 'Killing old screen...'
  screen -X -S tnnl quit # clean up any existing tunnels
  # sleep 30
  echo 'Restarting tunnel...'
  screen -dmS tnnl autossh -M 12399 -oPubkeyAuthentication=yes -oPasswordAuthentication=no -oLogLevel=error  -oUserKnownHostsFile=/dev/null -oStrictHostKeyChecking=no -R $port:localhost:22 $remote
fi
